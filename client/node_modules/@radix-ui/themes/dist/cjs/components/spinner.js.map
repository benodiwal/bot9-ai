{
  "version": 3,
  "sources": ["../../../src/components/spinner.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Flex } from './flex.js';\nimport { spinnerPropDefs } from './spinner.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype SpinnerElement = React.ElementRef<'span'>;\ntype SpinnerOwnProps = GetPropDefTypes<typeof spinnerPropDefs>;\ninterface SpinnerProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SpinnerOwnProps {}\nconst Spinner = React.forwardRef<SpinnerElement, SpinnerProps>((props, forwardedRef) => {\n  const { className, children, loading, ...spinnerProps } = extractProps(\n    props,\n    spinnerPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const spinner = (\n    <span {...spinnerProps} ref={forwardedRef} className={classNames('rt-Spinner', className)}>\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n      <span className=\"rt-SpinnerLeaf\" />\n    </span>\n  );\n\n  if (children === undefined) return spinner;\n\n  return (\n    <Flex asChild position=\"relative\" align=\"center\" justify=\"center\">\n      <span>\n        {/**\n         * `display: contents` removes the content from the accessibility tree in some browsers,\n         * so we force remove it with `aria-hidden`\n         */}\n        <span\n          aria-hidden\n          style={{ display: 'contents', visibility: 'hidden' }}\n          // Workaround to use `inert` until https://github.com/facebook/react/pull/24730 is merged.\n          {...{ inert: true ? '' : undefined }}\n        >\n          {children}\n        </span>\n\n        <Flex asChild align=\"center\" justify=\"center\" position=\"absolute\" inset=\"0\">\n          <span>{spinner}</span>\n        </Flex>\n      </span>\n    </Flex>\n  );\n});\nSpinner.displayName = 'Spinner';\n\nexport { Spinner };\nexport type { SpinnerProps };\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuB,oBACvBC,EAAuB,yBAEvBC,EAAqB,qBACrBC,EAAgC,8BAChCC,EAA6B,uCAC7BC,EAA+B,oCAY/B,MAAMP,EAAUE,EAAM,WAAyC,CAACM,EAAOC,IAAiB,CACtF,KAAM,CAAE,UAAAC,EAAW,SAAAC,EAAU,QAAAC,EAAS,GAAGC,CAAa,KAAI,gBACxDL,EACA,kBACA,gBACF,EAEA,GAAI,CAACI,EAAS,OAAOD,EAErB,MAAMG,EACJZ,EAAA,cAAC,QAAM,GAAGW,EAAc,IAAKJ,EAAc,aAAW,EAAAM,SAAW,aAAcL,CAAS,GACtFR,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,EACjCA,EAAA,cAAC,QAAK,UAAU,iBAAiB,CACnC,EAGF,OAAIS,IAAa,OAAkBG,EAGjCZ,EAAA,cAAC,QAAK,QAAO,GAAC,SAAS,WAAW,MAAM,SAAS,QAAQ,UACvDA,EAAA,cAAC,YAKCA,EAAA,cAAC,QACC,cAAW,GACX,MAAO,CAAE,QAAS,WAAY,WAAY,QAAS,EAE7C,MAAc,IAEnBS,CACH,EAEAT,EAAA,cAAC,QAAK,QAAO,GAAC,MAAM,SAAS,QAAQ,SAAS,SAAS,WAAW,MAAM,KACtEA,EAAA,cAAC,YAAMY,CAAQ,CACjB,CACF,CACF,CAEJ,CAAC,EACDd,EAAQ,YAAc",
  "names": ["spinner_exports", "__export", "Spinner", "__toCommonJS", "React", "import_classnames", "import_flex", "import_spinner_props", "import_extract_props", "import_margin_props", "props", "forwardedRef", "className", "children", "loading", "spinnerProps", "spinner", "classNames"]
}
