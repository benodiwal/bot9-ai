{
  "version": 3,
  "sources": ["../../../src/components/heading.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { headingPropDefs } from './heading.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype HeadingElement = React.ElementRef<'h1'>;\ntype HeadingOwnProps = GetPropDefTypes<typeof headingPropDefs>;\ninterface HeadingProps\n  extends ComponentPropsWithout<'h1', RemovedProps>,\n    MarginProps,\n    HeadingOwnProps {}\n\nconst Heading = React.forwardRef<HeadingElement, HeadingProps>((props, forwardedRef) => {\n  const {\n    children,\n    className,\n    asChild,\n    as: Tag = 'h1',\n    color,\n    ...headingProps\n  } = extractProps(props, headingPropDefs, marginPropDefs);\n  return (\n    <Slot\n      data-accent-color={color}\n      {...headingProps}\n      ref={forwardedRef}\n      className={classNames('rt-Heading', className)}\n    >\n      {asChild ? children : <Tag>{children}</Tag>}\n    </Slot>\n  );\n});\nHeading.displayName = 'Heading';\n\nexport { Heading };\nexport type { HeadingProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBAErB,OAAS,mBAAAC,MAAuB,qBAChC,OAAS,gBAAAC,MAAoB,8BAC7B,OAAS,kBAAAC,MAAsB,2BAa/B,MAAMC,EAAUN,EAAM,WAAyC,CAACO,EAAOC,IAAiB,CACtF,KAAM,CACJ,SAAAC,EACA,UAAAC,EACA,QAAAC,EACA,GAAIC,EAAM,KACV,MAAAC,EACA,GAAGC,CACL,EAAIV,EAAaG,EAAOJ,EAAiBE,CAAc,EACvD,OACEL,EAAA,cAACE,EAAA,CACC,oBAAmBW,EAClB,GAAGC,EACJ,IAAKN,EACL,UAAWP,EAAW,aAAcS,CAAS,GAE5CC,EAAUF,EAAWT,EAAA,cAACY,EAAA,KAAKH,CAAS,CACvC,CAEJ,CAAC,EACDH,EAAQ,YAAc",
  "names": ["React", "classNames", "Slot", "headingPropDefs", "extractProps", "marginPropDefs", "Heading", "props", "forwardedRef", "children", "className", "asChild", "Tag", "color", "headingProps"]
}
