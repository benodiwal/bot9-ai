{
  "version": 3,
  "sources": ["../../../src/components/dialog.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\n\nimport { dialogContentPropDefs } from './dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { DialogContentOwnProps } from './dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface DialogRootProps extends ComponentPropsWithout<typeof DialogPrimitive.Root, 'modal'> {}\nconst DialogRoot: React.FC<DialogRootProps> = (props) => <DialogPrimitive.Root {...props} modal />;\nDialogRoot.displayName = 'Dialog.Root';\n\ntype DialogTriggerElement = React.ElementRef<typeof DialogPrimitive.Trigger>;\ninterface DialogTriggerProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Trigger, RemovedProps> {}\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Trigger>\n  )\n);\nDialogTrigger.displayName = 'Dialog.Trigger';\n\ntype DialogContentElement = React.ElementRef<typeof DialogPrimitive.Content>;\ninterface DialogContentProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Content, RemovedProps>,\n    DialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof DialogPrimitive.Portal>['container'];\n}\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = dialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <DialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <DialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-DialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-DialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-DialogScrollPadding ${alignClassName}`}\n              >\n                <DialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-DialogContent', className)}\n                />\n              </div>\n            </div>\n          </DialogPrimitive.Overlay>\n        </Theme>\n      </DialogPrimitive.Portal>\n    );\n  }\n);\nDialogContent.displayName = 'Dialog.Content';\n\ntype DialogTitleElement = React.ElementRef<typeof Heading>;\ntype DialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Title>\n  )\n);\nDialogTitle.displayName = 'Dialog.Title';\n\ntype DialogDescriptionElement = HTMLParagraphElement;\ntype DialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props, forwardedRef) => (\n    <DialogPrimitive.Description asChild>\n      <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n    </DialogPrimitive.Description>\n  )\n);\nDialogDescription.displayName = 'Dialog.Description';\n\ntype DialogCloseElement = React.ElementRef<typeof DialogPrimitive.Close>;\ninterface DialogCloseProps\n  extends ComponentPropsWithout<typeof DialogPrimitive.Close, RemovedProps> {}\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <DialogPrimitive.Close {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </DialogPrimitive.Close>\n  )\n);\nDialogClose.displayName = 'Dialog.Close';\n\nexport {\n  DialogRoot as Root,\n  DialogTrigger as Trigger,\n  DialogContent as Content,\n  DialogTitle as Title,\n  DialogDescription as Description,\n  DialogClose as Close,\n};\n\nexport type {\n  DialogRootProps as RootProps,\n  DialogTriggerProps as TriggerProps,\n  DialogContentProps as ContentProps,\n  DialogTitleProps as TitleProps,\n  DialogDescriptionProps as DescriptionProps,\n  DialogCloseProps as CloseProps,\n};\n"],
  "mappings": "aAEA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,UAAYC,MAAqB,yBAEjC,OAAS,yBAAAC,MAA6B,oBACtC,OAAS,WAAAC,MAAe,eACxB,OAAS,QAAAC,MAAY,YACrB,OAAS,SAAAC,MAAa,aACtB,OAAS,gBAAAC,MAAoB,8BAC7B,OAAS,uBAAAC,MAA2B,sCAUpC,MAAMC,EAAyCC,GAAUV,EAAA,cAACE,EAAgB,KAAhB,CAAsB,GAAGQ,EAAO,MAAK,GAAC,EAChGD,EAAW,YAAc,cAKzB,MAAME,EAAgBX,EAAM,WAC1B,CAAC,CAAE,SAAAY,EAAU,GAAGF,CAAM,EAAGG,IACvBb,EAAA,cAACE,EAAgB,QAAhB,CAAyB,GAAGQ,EAAO,IAAKG,EAAc,QAAO,IAC3DL,EAAoBI,CAAQ,CAC/B,CAEJ,EACAD,EAAc,YAAc,iBAQ5B,MAAMG,EAAgBd,EAAM,WAC1B,CAAC,CAAE,MAAAe,EAAO,GAAGL,CAAM,EAAGG,IAAiB,CACrC,KAAM,CAAE,MAAOG,EAAc,GAAGC,CAAS,EAAId,EACvC,CAAE,UAAWe,CAAe,EAAIX,EAAa,CAAE,MAAAQ,CAAM,EAAG,CAAE,MAAOC,CAAa,CAAC,EAC/E,CAAE,UAAAG,EAAW,WAAAC,EAAY,UAAAC,EAAW,GAAGC,CAAa,EAAIf,EAAaG,EAAOO,CAAQ,EAC1F,OACEjB,EAAA,cAACE,EAAgB,OAAhB,CAAuB,UAAWmB,EAAW,WAAYD,GACxDpB,EAAA,cAACM,EAAA,CAAM,QAAO,IACZN,EAAA,cAACE,EAAgB,QAAhB,CAAwB,UAAU,yCACjCF,EAAA,cAAC,OAAI,UAAU,uCACbA,EAAA,cAAC,OACC,UAAW,qDAAqDkB,CAAc,IAE9ElB,EAAA,cAACE,EAAgB,QAAhB,CACE,GAAGoB,EACJ,IAAKT,EACL,UAAWZ,EAAW,uBAAwB,mBAAoBkB,CAAS,EAC7E,CACF,CACF,CACF,CACF,CACF,CAEJ,CACF,EACAL,EAAc,YAAc,iBAI5B,MAAMS,EAAcvB,EAAM,WACxB,CAACU,EAAOG,IACNb,EAAA,cAACE,EAAgB,MAAhB,CAAsB,QAAO,IAC5BF,EAAA,cAACI,EAAA,CAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,QAAS,GAAGM,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtF,CAEJ,EACAU,EAAY,YAAc,eAI1B,MAAMC,EAAoBxB,EAAM,WAC9B,CAACU,EAAOG,IACNb,EAAA,cAACE,EAAgB,YAAhB,CAA4B,QAAO,IAClCF,EAAA,cAACK,EAAA,CAAK,GAAG,IAAI,KAAK,IAAK,GAAGK,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtE,CAEJ,EACAW,EAAkB,YAAc,qBAKhC,MAAMC,EAAczB,EAAM,WACxB,CAAC,CAAE,SAAAY,EAAU,GAAGF,CAAM,EAAGG,IACvBb,EAAA,cAACE,EAAgB,MAAhB,CAAuB,GAAGQ,EAAO,IAAKG,EAAc,QAAO,IACzDL,EAAoBI,CAAQ,CAC/B,CAEJ,EACAa,EAAY,YAAc",
  "names": ["React", "classNames", "DialogPrimitive", "dialogContentPropDefs", "Heading", "Text", "Theme", "extractProps", "requireReactElement", "DialogRoot", "props", "DialogTrigger", "children", "forwardedRef", "DialogContent", "align", "alignPropDef", "propDefs", "alignClassName", "className", "forceMount", "container", "contentProps", "DialogTitle", "DialogDescription", "DialogClose"]
}
