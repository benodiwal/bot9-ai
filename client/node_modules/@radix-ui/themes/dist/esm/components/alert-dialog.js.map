{
  "version": 3,
  "sources": ["../../../src/components/alert-dialog.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\n\nimport { alertDialogContentPropDefs } from './alert-dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { AlertDialogContentOwnProps } from './alert-dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface AlertDialogRootProps\n  extends React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> {}\nconst AlertDialogRoot: React.FC<AlertDialogRootProps> = (props) => (\n  <AlertDialogPrimitive.Root {...props} />\n);\nAlertDialogRoot.displayName = 'AlertDialog.Root';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof AlertDialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Trigger, RemovedProps> {}\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Trigger>\n  )\n);\nAlertDialogTrigger.displayName = 'AlertDialog.Trigger';\n\ntype AlertDialogContentElement = React.ElementRef<typeof AlertDialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Content, RemovedProps>,\n    AlertDialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Portal>['container'];\n}\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = alertDialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <AlertDialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <AlertDialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-AlertDialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-AlertDialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding ${alignClassName}`}\n              >\n                <AlertDialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-AlertDialogContent', className)}\n                />\n              </div>\n            </div>\n          </AlertDialogPrimitive.Overlay>\n        </Theme>\n      </AlertDialogPrimitive.Portal>\n    );\n  }\n);\nAlertDialogContent.displayName = 'AlertDialog.Content';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof Heading>;\ntype AlertDialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props, forwardedRef) => (\n    <AlertDialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </AlertDialogPrimitive.Title>\n  )\n);\nAlertDialogTitle.displayName = 'AlertDialog.Title';\n\ntype AlertDialogDescriptionElement = HTMLParagraphElement;\ntype AlertDialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props, forwardedRef) => (\n  <AlertDialogPrimitive.Description asChild>\n    <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n  </AlertDialogPrimitive.Description>\n));\nAlertDialogDescription.displayName = 'AlertDialog.Description';\n\ntype AlertDialogActionElement = React.ElementRef<typeof AlertDialogPrimitive.Action>;\ninterface AlertDialogActionProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Action, RemovedProps> {}\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Action {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Action>\n  )\n);\nAlertDialogAction.displayName = 'AlertDialog.Action';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof AlertDialogPrimitive.Cancel>;\ninterface AlertDialogCancelProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Cancel, RemovedProps> {}\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Cancel {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Cancel>\n  )\n);\nAlertDialogCancel.displayName = 'AlertDialog.Cancel';\n\nexport {\n  AlertDialogRoot as Root,\n  AlertDialogTrigger as Trigger,\n  AlertDialogContent as Content,\n  AlertDialogTitle as Title,\n  AlertDialogDescription as Description,\n  AlertDialogAction as Action,\n  AlertDialogCancel as Cancel,\n};\n\nexport type {\n  AlertDialogRootProps as RootProps,\n  AlertDialogTriggerProps as TriggerProps,\n  AlertDialogContentProps as ContentProps,\n  AlertDialogTitleProps as TitleProps,\n  AlertDialogDescriptionProps as DescriptionProps,\n  AlertDialogActionProps as ActionProps,\n  AlertDialogCancelProps as CancelProps,\n};\n"],
  "mappings": "aAEA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,UAAYC,MAA0B,+BAEtC,OAAS,8BAAAC,MAAkC,0BAC3C,OAAS,WAAAC,MAAe,eACxB,OAAS,QAAAC,MAAY,YACrB,OAAS,SAAAC,MAAa,aACtB,OAAS,gBAAAC,MAAoB,8BAC7B,OAAS,uBAAAC,MAA2B,sCAWpC,MAAMC,EAAmDC,GACvDV,EAAA,cAACE,EAAqB,KAArB,CAA2B,GAAGQ,EAAO,EAExCD,EAAgB,YAAc,mBAK9B,MAAME,EAAqBX,EAAM,WAC/B,CAAC,CAAE,SAAAY,EAAU,GAAGF,CAAM,EAAGG,IACvBb,EAAA,cAACE,EAAqB,QAArB,CAA8B,GAAGQ,EAAO,IAAKG,EAAc,QAAO,IAChEL,EAAoBI,CAAQ,CAC/B,CAEJ,EACAD,EAAmB,YAAc,sBAQjC,MAAMG,EAAqBd,EAAM,WAC/B,CAAC,CAAE,MAAAe,EAAO,GAAGL,CAAM,EAAGG,IAAiB,CACrC,KAAM,CAAE,MAAOG,EAAc,GAAGC,CAAS,EAAId,EACvC,CAAE,UAAWe,CAAe,EAAIX,EAAa,CAAE,MAAAQ,CAAM,EAAG,CAAE,MAAOC,CAAa,CAAC,EAC/E,CAAE,UAAAG,EAAW,WAAAC,EAAY,UAAAC,EAAW,GAAGC,CAAa,EAAIf,EAAaG,EAAOO,CAAQ,EAC1F,OACEjB,EAAA,cAACE,EAAqB,OAArB,CAA4B,UAAWmB,EAAW,WAAYD,GAC7DpB,EAAA,cAACM,EAAA,CAAM,QAAO,IACZN,EAAA,cAACE,EAAqB,QAArB,CAA6B,UAAU,8CACtCF,EAAA,cAAC,OAAI,UAAU,4CACbA,EAAA,cAAC,OACC,UAAW,0DAA0DkB,CAAc,IAEnFlB,EAAA,cAACE,EAAqB,QAArB,CACE,GAAGoB,EACJ,IAAKT,EACL,UAAWZ,EAAW,uBAAwB,wBAAyBkB,CAAS,EAClF,CACF,CACF,CACF,CACF,CACF,CAEJ,CACF,EACAL,EAAmB,YAAc,sBAIjC,MAAMS,EAAmBvB,EAAM,WAC7B,CAACU,EAAOG,IACNb,EAAA,cAACE,EAAqB,MAArB,CAA2B,QAAO,IACjCF,EAAA,cAACI,EAAA,CAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,QAAS,GAAGM,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtF,CAEJ,EACAU,EAAiB,YAAc,oBAI/B,MAAMC,EAAyBxB,EAAM,WAGnC,CAACU,EAAOG,IACRb,EAAA,cAACE,EAAqB,YAArB,CAAiC,QAAO,IACvCF,EAAA,cAACK,EAAA,CAAK,GAAG,IAAI,KAAK,IAAK,GAAGK,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtE,CACD,EACDW,EAAuB,YAAc,0BAKrC,MAAMC,EAAoBzB,EAAM,WAC9B,CAAC,CAAE,SAAAY,EAAU,GAAGF,CAAM,EAAGG,IACvBb,EAAA,cAACE,EAAqB,OAArB,CAA6B,GAAGQ,EAAO,IAAKG,EAAc,QAAO,IAC/DL,EAAoBI,CAAQ,CAC/B,CAEJ,EACAa,EAAkB,YAAc,qBAKhC,MAAMC,EAAoB1B,EAAM,WAC9B,CAAC,CAAE,SAAAY,EAAU,GAAGF,CAAM,EAAGG,IACvBb,EAAA,cAACE,EAAqB,OAArB,CAA6B,GAAGQ,EAAO,IAAKG,EAAc,QAAO,IAC/DL,EAAoBI,CAAQ,CAC/B,CAEJ,EACAc,EAAkB,YAAc",
  "names": ["React", "classNames", "AlertDialogPrimitive", "alertDialogContentPropDefs", "Heading", "Text", "Theme", "extractProps", "requireReactElement", "AlertDialogRoot", "props", "AlertDialogTrigger", "children", "forwardedRef", "AlertDialogContent", "align", "alignPropDef", "propDefs", "alignClassName", "className", "forceMount", "container", "contentProps", "AlertDialogTitle", "AlertDialogDescription", "AlertDialogAction", "AlertDialogCancel"]
}
