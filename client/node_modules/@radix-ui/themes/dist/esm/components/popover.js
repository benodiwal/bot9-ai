"use client";import*as o from"react";import f from"classnames";import*as p from"@radix-ui/react-popover";import{extractProps as C}from"../helpers/extract-props.js";import{requireReactElement as P}from"../helpers/require-react-element.js";import{popoverContentPropDefs as g}from"./popover.props.js";import{Theme as c}from"./theme.js";const n=e=>o.createElement(p.Root,{...e});n.displayName="Popover.Root";const s=o.forwardRef(({children:e,...r},t)=>o.createElement(p.Trigger,{...r,ref:t,asChild:!0},P(e)));s.displayName="Popover.Trigger";const i=o.forwardRef((e,r)=>{const{className:t,forceMount:v,container:a,...l}=C(e,g);return o.createElement(p.Portal,{container:a,forceMount:v},o.createElement(c,{asChild:!0},o.createElement(p.Content,{align:"start",sideOffset:8,collisionPadding:10,...l,ref:r,className:f("rt-PopperContent","rt-PopoverContent",t)})))});i.displayName="Popover.Content";const m=o.forwardRef(({children:e,...r},t)=>o.createElement(p.Close,{...r,ref:t,asChild:!0},P(e)));m.displayName="Popover.Close";export{m as Close,i as Content,n as Root,s as Trigger};
//# sourceMappingURL=popover.js.map
