{
  "version": 3,
  "sources": ["../../../src/components/radio.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\nimport { radioPropDefs } from './radio.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout } from '../helpers/component-props.js';\nimport type { NotInputRadioAttributes } from '../helpers/input-attributes.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype RadioElement = React.ElementRef<'input'>;\ntype RadioOwnProps = GetPropDefTypes<typeof radioPropDefs> & {\n  value: string;\n  onValueChange?: (value: string) => void;\n};\ntype RadioInputProps = ComponentPropsWithout<\n  'input',\n  NotInputRadioAttributes | 'color' | 'defaultValue' | 'value'\n>;\ninterface RadioProps extends RadioInputProps, MarginProps, RadioOwnProps {}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>((props, forwardedRef) => {\n  const ref = React.useRef<RadioElement>(null);\n  const { className, color, onChange, onValueChange, ...radioProps } = extractProps(\n    props,\n    radioPropDefs,\n    marginPropDefs\n  );\n  return (\n    <input\n      type=\"radio\"\n      data-accent-color={color}\n      {...radioProps}\n      onChange={composeEventHandlers(onChange, (event) =>\n        onValueChange?.(event.currentTarget.value)\n      )}\n      ref={composeRefs(ref, forwardedRef)}\n      className={classNames('rt-reset', 'rt-BaseRadioRoot', 'rt-RadioRoot', className)}\n    />\n  );\n});\nRadio.displayName = 'Radio';\n\nexport { Radio };\nexport type { RadioProps };\n"],
  "mappings": "aAEA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,wBAAAC,MAA4B,sBACrC,OAAS,eAAAC,MAAmB,+BAE5B,OAAS,iBAAAC,MAAqB,mBAC9B,OAAS,kBAAAC,MAAsB,2BAC/B,OAAS,gBAAAC,MAAoB,8BAkB7B,MAAMC,EAAQP,EAAM,WAAqC,CAACQ,EAAOC,IAAiB,CAChF,MAAMC,EAAMV,EAAM,OAAqB,IAAI,EACrC,CAAE,UAAAW,EAAW,MAAAC,EAAO,SAAAC,EAAU,cAAAC,EAAe,GAAGC,CAAW,EAAIT,EACnEE,EACAJ,EACAC,CACF,EACA,OACEL,EAAA,cAAC,SACC,KAAK,QACL,oBAAmBY,EAClB,GAAGG,EACJ,SAAUb,EAAqBW,EAAWG,GACxCF,IAAgBE,EAAM,cAAc,KAAK,CAC3C,EACA,IAAKb,EAAYO,EAAKD,CAAY,EAClC,UAAWR,EAAW,WAAY,mBAAoB,eAAgBU,CAAS,EACjF,CAEJ,CAAC,EACDJ,EAAM,YAAc",
  "names": ["React", "classNames", "composeEventHandlers", "composeRefs", "radioPropDefs", "marginPropDefs", "extractProps", "Radio", "props", "forwardedRef", "ref", "className", "color", "onChange", "onValueChange", "radioProps", "event"]
}
