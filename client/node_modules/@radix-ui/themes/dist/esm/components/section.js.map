{
  "version": 3,
  "sources": ["../../../src/components/section.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { sectionPropDefs } from './section.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { layoutPropDefs } from '../props/layout.props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { LayoutProps } from '../props/layout.props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { SectionOwnProps } from './section.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SectionElement = React.ElementRef<'div'>;\ninterface SectionProps\n  extends ComponentPropsWithout<'div', RemovedProps>,\n    MarginProps,\n    LayoutProps,\n    SectionOwnProps {}\nconst Section = React.forwardRef<SectionElement, SectionProps>((props, forwardedRef) => {\n  const { asChild, className, ...sectionProps } = extractProps(\n    props,\n    sectionPropDefs,\n    layoutPropDefs,\n    marginPropDefs\n  );\n  const Comp = asChild ? Slot : 'section';\n  return (\n    <Comp {...sectionProps} ref={forwardedRef} className={classNames('rt-Section', className)} />\n  );\n});\nSection.displayName = 'Section';\n\nexport { Section };\nexport type { SectionProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBAErB,OAAS,mBAAAC,MAAuB,qBAChC,OAAS,gBAAAC,MAAoB,8BAC7B,OAAS,kBAAAC,MAAsB,2BAC/B,OAAS,kBAAAC,MAAsB,2BAa/B,MAAMC,EAAUP,EAAM,WAAyC,CAACQ,EAAOC,IAAiB,CACtF,KAAM,CAAE,QAAAC,EAAS,UAAAC,EAAW,GAAGC,CAAa,EAAIR,EAC9CI,EACAL,EACAE,EACAC,CACF,EAEA,OACEN,EAAA,cAFWU,EAAUR,EAAO,UAE3B,CAAM,GAAGU,EAAc,IAAKH,EAAc,UAAWR,EAAW,aAAcU,CAAS,EAAG,CAE/F,CAAC,EACDJ,EAAQ,YAAc",
  "names": ["React", "classNames", "Slot", "sectionPropDefs", "extractProps", "layoutPropDefs", "marginPropDefs", "Section", "props", "forwardedRef", "asChild", "className", "sectionProps"]
}
