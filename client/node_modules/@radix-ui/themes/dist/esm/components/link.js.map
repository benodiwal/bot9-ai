{
  "version": 3,
  "sources": ["../../../src/components/link.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from './text.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { linkPropDefs } from './link.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype LinkElement = React.ElementRef<'a'>;\ntype LinkOwnProps = GetPropDefTypes<typeof linkPropDefs>;\ninterface LinkProps extends ComponentPropsWithout<'a', RemovedProps>, MarginProps, LinkOwnProps {}\nconst Link = React.forwardRef<LinkElement, LinkProps>((props, forwardedRef) => {\n  const { children, className, color, asChild, ...linkProps } = extractProps(props, linkPropDefs);\n  return (\n    <Text\n      {...linkProps}\n      data-accent-color={color}\n      ref={forwardedRef}\n      asChild\n      className={classNames('rt-reset', 'rt-Link', className)}\n    >\n      {asChild ? children : <a>{children}</a>}\n    </Text>\n  );\n});\nLink.displayName = 'Link';\n\nexport { Link };\nexport type { LinkProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aAEvB,OAAS,QAAAC,MAAY,YACrB,OAAS,gBAAAC,MAAoB,8BAC7B,OAAS,gBAAAC,MAAoB,kBAS7B,MAAMC,EAAOL,EAAM,WAAmC,CAACM,EAAOC,IAAiB,CAC7E,KAAM,CAAE,SAAAC,EAAU,UAAAC,EAAW,MAAAC,EAAO,QAAAC,EAAS,GAAGC,CAAU,EAAIT,EAAaG,EAAOF,CAAY,EAC9F,OACEJ,EAAA,cAACE,EAAA,CACE,GAAGU,EACJ,oBAAmBF,EACnB,IAAKH,EACL,QAAO,GACP,UAAWN,EAAW,WAAY,UAAWQ,CAAS,GAErDE,EAAUH,EAAWR,EAAA,cAAC,SAAGQ,CAAS,CACrC,CAEJ,CAAC,EACDH,EAAK,YAAc",
  "names": ["React", "classNames", "Text", "extractProps", "linkPropDefs", "Link", "props", "forwardedRef", "children", "className", "color", "asChild", "linkProps"]
}
