{
  "version": 3,
  "sources": ["../../../src/components/blockquote.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { Text } from './text.js';\nimport { blockquotePropDefs } from './blockquote.props.js';\n\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ntype BlockquoteElement = React.ElementRef<'blockquote'>;\ntype BlockQuoteOwnProps = GetPropDefTypes<typeof blockquotePropDefs>;\ninterface BlockquoteProps\n  extends ComponentPropsWithout<'blockquote', RemovedProps>,\n    MarginProps,\n    BlockQuoteOwnProps {}\nconst Blockquote = React.forwardRef<BlockquoteElement, BlockquoteProps>((props, forwardedRef) => {\n  const { asChild, children, className, ...blockquoteProps } = props;\n  const Comp = asChild ? Slot : 'blockquote';\n  return (\n    <Text\n      asChild\n      {...blockquoteProps}\n      ref={forwardedRef}\n      className={classNames('rt-Blockquote', className)}\n    >\n      <Comp>{children}</Comp>\n    </Text>\n  );\n});\nBlockquote.displayName = 'Blockquote';\n\nexport { Blockquote };\nexport type { BlockquoteProps };\n"],
  "mappings": "AAAA,UAAYA,MAAW,QACvB,OAAOC,MAAgB,aACvB,OAAS,QAAAC,MAAY,uBAErB,OAAS,QAAAC,MAAY,YACrB,MAAmC,wBAYnC,MAAMC,EAAaJ,EAAM,WAA+C,CAACK,EAAOC,IAAiB,CAC/F,KAAM,CAAE,QAAAC,EAAS,SAAAC,EAAU,UAAAC,EAAW,GAAGC,CAAgB,EAAIL,EACvDM,EAAOJ,EAAUL,EAAO,aAC9B,OACEF,EAAA,cAACG,EAAA,CACC,QAAO,GACN,GAAGO,EACJ,IAAKJ,EACL,UAAWL,EAAW,gBAAiBQ,CAAS,GAEhDT,EAAA,cAACW,EAAA,KAAMH,CAAS,CAClB,CAEJ,CAAC,EACDJ,EAAW,YAAc",
  "names": ["React", "classNames", "Slot", "Text", "Blockquote", "props", "forwardedRef", "asChild", "children", "className", "blockquoteProps", "Comp"]
}
